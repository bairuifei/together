<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.together.mapper.InviteMapper" >
  <resultMap id="BaseResultMap" type="com.together.model.po.Invite" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="from_id" property="fromId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="lat" property="lat" jdbcType="VARCHAR" />
    <result column="lng" property="lng" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMapVo" type="com.together.model.vo.InviteVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="from_id" property="fromId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="lat" property="lat" jdbcType="VARCHAR" />
    <result column="lng" property="lng" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <collection property="invitors" resultMap="InviteSureMap"/>
  </resultMap>
  <resultMap id="InviteSureMap" type="com.together.model.vo.InviteSureVo">
    <result column="to_id" property="toId" jdbcType="INTEGER" />
    <result column="toStatus" property="toStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, from_id, title, content, location, lat, lng, starttime, endtime, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from invite
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from invite
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.together.model.po.Invite" >
    insert into invite (id, from_id, title, 
      content, location, lat, 
      lng, starttime, endtime, 
      status)
    values (#{id,jdbcType=INTEGER}, #{fromId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, 
      #{lng,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.together.model.po.Invite" useGeneratedKeys="true" keyProperty="id" >
    insert into invite
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fromId != null" >
        from_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="lng != null" >
        lng,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fromId != null" >
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        #{lng,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.together.model.po.Invite" >
    update invite
    <set >
      <if test="fromId != null" >
        from_id = #{fromId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        lng = #{lng,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.together.model.po.Invite" >
    update invite
    set from_id = #{fromId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--以上为基础CRUD方法-->
  <update id="updateInviteDoing" parameterType="Map">
    update invite set status = #{result,jdbcType=INTEGER} where status = #{cause,jdbcType=INTEGER} and starttime &lt;= CURRENT_TIMESTAMP
  </update>

  <update id="updateInviteDone" parameterType="Map">
    update invite set status = #{result,jdbcType=INTEGER} where status = #{cause,jdbcType=INTEGER} and endtime &lt;= CURRENT_TIMESTAMP
  </update>

  <select id="findByStarttimeAndEndtime" parameterType="Map" resultType="int">
    SELECT count(*) from invite i LEFT JOIN invite_sure isure ON i.id=isure.yq_id
    where
--     判定本人是否为发起人或参与人 OR 判定是否本人参与状态为参加
    (i.from_id=#{myId,jdbcType=INTEGER} OR (isure.to_id=#{myId,jdbcType=INTEGER} AND isure.status=1))
--     判定时间段是否与当前邀请时间段有交集
    AND (
    (i.starttime BETWEEN #{starttime,jdbcType=TIMESTAMP} AND #{endtime,jdbcType=TIMESTAMP})
    OR (i.endtime BETWEEN #{starttime,jdbcType=TIMESTAMP} AND #{endtime,jdbcType=TIMESTAMP})
    OR (i.starttime &lt;= #{starttime,jdbcType=TIMESTAMP} AND i.endtime &gt;= #{endtime,jdbcType=TIMESTAMP})
    )
--     判定邀请状态是否已发出或进行中
    AND (i.status=0 OR i.status=1)
  </select>

  <sql id="baseVo">
    i.id as id,i.from_id,i.title as title,i.content as content,i.location as location,i.lat as lat,i.lng as lng,i.starttime as starttime,i.endtime as endtime,i.status as status,isure.to_id,isure.status as toStatus
  </sql>

  <select id="findByFromId" parameterType="int" resultMap="BaseResultMapVo">
    SELECT <include refid="baseVo"/> from invite i LEFT JOIN invite_sure isure ON i.id=isure.yq_id
    where i.from_id = #{fromId,jdbcType=INTEGER}
  </select>

  <select id="findByToIdAndSure" parameterType="Map" resultMap="BaseResultMapVo">
    SELECT <include refid="baseVo"/> from invite i LEFT JOIN invite_sure isure ON i.id=isure.yq_id
    where
    i.id in ( SELECT yq_id from invite_sure where to_id = #{toId,jdbcType=INTEGER} and status = #{status,jdbcType=INTEGER} )
    <if test="code==0">
      AND i.status = #{code,jdbcType=INTEGER}
    </if>
  </select>

  <select id="findJoin" parameterType="Map" resultMap="BaseResultMapVo">
    SELECT <include refid="baseVo"/> from invite i LEFT JOIN invite_sure isure ON i.id=isure.yq_id
    where
--     此处与其他略有不同，发起必参与，发起人也会有相应的参与邀请列表
    i.from_id = #{toId,jdbcType=INTEGER}
    OR
    i.id in ( SELECT yq_id from invite_sure where to_id = #{toId,jdbcType=INTEGER} and status = #{status,jdbcType=INTEGER} )
  </select>

</mapper>